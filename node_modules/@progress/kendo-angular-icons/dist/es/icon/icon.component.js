/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Component, ElementRef, Input, Renderer2, HostBinding } from '@angular/core';
import { IconBase } from '../common/icon-base';
/**
 * Represents the Kendo UI Icon component for Angular.
 */
var IconComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IconComponent, _super);
    function IconComponent(element, renderer) {
        var _this = _super.call(this, element, renderer) || this;
        _this.element = element;
        _this.renderer = renderer;
        _this.hostClass = true;
        return _this;
    }
    Object.defineProperty(IconComponent.prototype, "name", {
        get: function () {
            return this._name;
        },
        /**
         * Defines the name for an existing icon in a Kendo UI theme, which will be rendered.
         * All [Kendo UI Icons]({% slug icons %}#toc-list-of-font-icons) are supported.
         */
        set: function (name) {
            var element = this.element.nativeElement;
            this._name = name;
            this.renderer.removeClass(element, "k-i-" + this.name);
            if (name) {
                this.renderer.addClass(element, "k-i-" + this.name);
            }
        },
        enumerable: true,
        configurable: true
    });
    IconComponent.decorators = [
        { type: Component, args: [{
                    exportAs: 'kendoIcon',
                    selector: 'kendo-icon',
                    template: ""
                },] },
    ];
    /** @nocollapse */
    IconComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    IconComponent.propDecorators = {
        hostClass: [{ type: HostBinding, args: ['class.k-icon',] }],
        name: [{ type: Input }]
    };
    return IconComponent;
}(IconBase));
export { IconComponent };
