{"version":3,"file":"textbox-container.component.d.ts","sources":["textbox-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { AfterContentInit, ElementRef, OnDestroy, Renderer2, ChangeDetectorRef } from '@angular/core';\nimport { TextAreaDirective } from './textarea.directive';\nimport { NgControl } from '@angular/forms';\n/**\n * @hidden\n */\nexport declare class TextBoxContainerComponent implements AfterContentInit, OnDestroy {\n    private elementRef;\n    private renderer;\n    private changeDetectorRef;\n    readonly hostClasses: boolean;\n    readonly textareaElementClass: boolean;\n    readonly focusedClass: boolean;\n    readonly invalidClass: boolean;\n    /**\n     * @hidden\n     */\n    direction: string;\n    /**\n     * Sets the `id` attribute of the input inside the container.\n     */\n    id: string;\n    /**\n     * Adds a floating label which describes the input.\n     */\n    floatingLabel: string;\n    kendoInput: any;\n    textarea: TextAreaDirective;\n    formControl: NgControl;\n    /**\n     * @hidden\n     */\n    focused: boolean;\n    /**\n     * @hidden\n     */\n    empty: boolean;\n    /**\n     * @hidden\n     */\n    invalid: boolean;\n    private _subscriptions;\n    private autoFillStarted;\n    constructor(elementRef: ElementRef, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef, rtl: boolean);\n    /**\n     * @hidden\n     */\n    ngAfterContentInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    private subscribe;\n    private updateState;\n}\n"]}