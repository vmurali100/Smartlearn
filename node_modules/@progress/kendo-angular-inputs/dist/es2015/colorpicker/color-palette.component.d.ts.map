{"version":3,"file":"color-palette.component.d.ts","sources":["color-palette.component.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { OnInit, EventEmitter, SimpleChanges, OnChanges, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { TileSize, OutputFormat, TableCell } from './models';\nimport { ColorPaletteService } from './services/color-palette.service';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * The ColorPalette component provides a set of predefined palette presets and enables you to implement a custom color palette.\n * The ColorPalette is independently used by `kendo-colorpicker` and can be directly added to the page.\n */\nexport declare class ColorPaletteComponent implements OnInit, OnDestroy, OnChanges, ControlValueAccessor {\n    private service;\n    /**\n     * @hidden\n     */\n    direction: string;\n    /**\n     * @hidden\n     */\n    readonly paletteId: string;\n    /**\n     * @hidden\n     */\n    id: string;\n    /**\n     * Specifies the output format of the ColorPaletteComponent.\n     * The input value may be in a different format. However, it will be parsed into the output `format`\n     * after the component processes it.\n     *\n     * The supported values are:\n     * * (Default) `hex`\n     * * `rgba`\n     * * `name`\n     */\n    format: OutputFormat;\n    /**\n     * Specifies the value of the initially selected color.\n     */\n    value: string;\n    /**\n     * Specifies the number of columns that will be displayed.\n     * Defaults to `10`.\n     */\n    columns: number;\n    /**\n     * The color palette that will be displayed.\n     *\n     * The supported values are:\n     * * The name of the predefined palette preset (for example, `office`, `basic`, and `apex`).\n     * * A string with comma-separated colors.\n     * * A string array.\n     */\n    palette: string | Array<string>;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n    tabindex: number;\n    /**\n     * Sets the disabled state of the ColorPalette.\n     */\n    disabled?: boolean;\n    /**\n     * Sets the read-only state of the ColorPalette.\n     */\n    readonly?: boolean;\n    /**\n     * Specifies the size of a color cell.\n     *\n     * The possible values are:\n     * * (Default) `tileSize = 24`\n     * * `{ width: number, height: number }`\n     */\n    tileSize: number | TileSize;\n    /**\n     * @hidden\n     */\n    readonly tileLayout: TileSize;\n    /**\n     * Fires each time the color selection is changed.\n     */\n    selectionChange: EventEmitter<string>;\n    /**\n     * Fires each time the value is changed.\n     */\n    valueChange: EventEmitter<string>;\n    /**\n     * Fires each time the user selects a cell with the mouse or presses `Enter`.\n     *\n     * @hidden\n     */\n    cellSelection: EventEmitter<string>;\n    /**\n     * @hidden\n     */\n    readonly colorRows: string[][];\n    /**\n     * @hidden\n     */\n    focusedCell: TableCell;\n    /**\n     * @hidden\n     */\n    readonly hostTabindex: number;\n    /**\n     * @hidden\n     */\n    hostClasses: boolean;\n    /**\n     * @hidden\n     */\n    readonly disabledClass: boolean;\n    private selection;\n    private _value;\n    private _columns;\n    private _palette;\n    private _tabindex;\n    private dynamicRTLSubscription;\n    constructor(service: ColorPaletteService, localizationService: LocalizationService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * @hidden\n     */\n    handleKeydown(event: any): void;\n    /**\n     * @hidden\n     */\n    handleHostBlur(): void;\n    /**\n     * @hidden\n     */\n    handleCellSelection(value: string, focusedCell?: TableCell): void;\n    /**\n     * @hidden\n     */\n    writeValue(value: string): void;\n    /**\n     * @hidden\n     */\n    registerOnChange(fn: any): void;\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn: any): void;\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled: boolean): void;\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty.\n     */\n    isEmpty(): boolean;\n    /**\n     * Clears the color value of the ColorPalette.\n     */\n    reset(): void;\n    private setRows;\n    private handleCellNavigation;\n    private handleEnter;\n    private notifyNgTouched;\n    private notifyNgChanged;\n}\n"]}