{"version":3,"file":"fileselect.component.d.ts","sources":["fileselect.component.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { OnDestroy, Renderer2, ElementRef, EventEmitter, NgZone, OnInit, ChangeDetectorRef } from \"@angular/core\";\nimport { FileRestrictions, FileInfo } from './types';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { UploadService } from './upload.service';\nimport { FileMap } from './types/file-map';\nimport { Direction } from './types/direction';\nimport { RemoveEvent, SelectEvent } from './events';\nimport { NavigationService } from './navigation.service';\nimport { FileTemplateDirective } from './templates/file-template.directive';\nimport { DropZoneService } from './dropzone.service';\n/**\n * @hidden\n */\nexport declare const FILESELECT_VALUE_ACCESSOR: any;\nexport declare class FileSelectComponent implements OnInit, OnDestroy {\n    private uploadService;\n    private localization;\n    private navigation;\n    private dropZoneService;\n    private ngZone;\n    private renderer;\n    private cdr;\n    /**\n     * Sets the `accept` attribute of the `input` element of the FileSelect.\n     */\n    accept: string;\n    /**\n     * Disables the FileSelect.\n     * The default value is `false`.\n     */\n    disabled: boolean;\n    /**\n     * Enables the selection of multiple files\n     * ([see example]({% slug fileprocessing_upload %}#toc-upload-of-sinlge-or-multiple-files)).\n     * If set to `false`, only one file can be selected at a time.\n     */\n    multiple: boolean;\n    /**\n     * Sets the `name` attribute of the `input` element of the FileSelect.\n     */\n    name: string;\n    /**\n     * Toggles the visibility of the file list.\n     */\n    showFileList: boolean;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the FileSelect.\n     */\n    tabindex: number;\n    /**\n     * Sets the restrictions for selected files.\n     */\n    restrictions: FileRestrictions;\n    /**\n     * Specifies the id of the external drop zone to associate with the FileSelect.\n     */\n    zoneId: string;\n    /**\n     * @hidden\n     */\n    focusableId: string;\n    fileTemplate: FileTemplateDirective;\n    fileSelect: ElementRef;\n    fileSelectButton: ElementRef;\n    /**\n     * Fires when the user navigates outside the component.\n     */\n    onBlur: EventEmitter<any>;\n    /**\n     * Fires when the component is focused.\n     */\n    onFocus: EventEmitter<any>;\n    /**\n     * Fires when files are selected. If prevented, the selected files will not be added to the list.\n     */\n    select: EventEmitter<SelectEvent>;\n    /**\n     * Fires when a file is about to be removed. If prevented, the file will remain in the list.\n     */\n    remove: EventEmitter<RemoveEvent>;\n    /**\n     * Fires when the value of the component has changed as a result of a successful `select` or `remove` operation.\n     */\n    valueChange: EventEmitter<Array<File>>;\n    hostDefaultClasses: boolean;\n    readonly hostDisabledClass: boolean;\n    readonly dir: string;\n    /**\n     * @hidden\n     */\n    _restrictions: FileRestrictions;\n    /**\n     * @hidden\n     */\n    fileList: FileMap;\n    direction: Direction;\n    private wrapper;\n    private documentClick;\n    private blurSubscription;\n    private wrapperFocusSubscription;\n    private selectButtonFocusSubscription;\n    private localizationChangeSubscription;\n    private subs;\n    constructor(uploadService: UploadService, localization: LocalizationService, navigation: NavigationService, dropZoneService: DropZoneService, ngZone: NgZone, renderer: Renderer2, cdr: ChangeDetectorRef, wrapper: ElementRef);\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    textFor(key: string): string;\n    /**\n     * Focuses the underlying input element.\n     */\n    focus(): void;\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    handleKeydown(event: any): void;\n    /**\n     * @hidden\n     */\n    writeValue(newValue: any): void;\n    protected onTouchedCallback: Function;\n    protected onChangeCallback: Function;\n    /**\n     * @hidden\n     */\n    registerOnChange(fn: any): void;\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn: any): void;\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled: boolean): void;\n    /**\n     * Removes specific file from the file list.\n     */\n    removeFileByUid(uid: string): void;\n    /**\n     * Visually clears all files from the UI.\n     */\n    clearFiles(): void;\n    /**\n     * @hidden\n     * Used to determine if the component is empty.\n     */\n    isEmpty(): boolean;\n    /**\n     * @hidden\n     * Used by the external dropzone to add files to the FileSelect\n     */\n    addFiles(files: FileInfo[]): void;\n    /**\n     * @hidden\n     */\n    readonly selectButtonTabIndex: number;\n    /**\n     * @hidden\n     */\n    onFileSelectButtonFocus(_event?: any): void;\n    /**\n     * @hidden\n     */\n    onFileSelectButtonBlur(_event?: any): void;\n    private subscribeBlur;\n    private subscribeFocus;\n    private attachEventHandlers;\n    private setDefaultSettings;\n}\n"]}