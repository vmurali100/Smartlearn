{"version":3,"file":"base-filter-cell.component.d.ts","sources":["base-filter-cell.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { QueryList, AfterContentInit, OnDestroy } from '@angular/core';\nimport { FilterService } from './filter.service';\nimport { CompositeFilterDescriptor, FilterDescriptor } from '@progress/kendo-data-query';\nimport { FilterOperatorBase } from './operators/filter-operator.base';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * @hidden\n */\nexport declare const setFilter: (index: any, filter: any, field: any, defaultOperator: any) => FilterDescriptor;\n/**\n * @hidden\n */\nexport declare const logicOperators: (localization: LocalizationService) => {\n    text: string;\n    value: \"or\" | \"and\";\n}[];\n/**\n * @hidden\n */\nexport declare const flatten: (filter: CompositeFilterDescriptor) => FilterDescriptor[];\n/**\n * @hidden\n */\nexport declare const filtersByField: (filter: CompositeFilterDescriptor, field: string) => FilterDescriptor[];\n/**\n * @hidden\n */\nexport declare const filterByField: (filter: CompositeFilterDescriptor, field: string) => FilterDescriptor;\n/**\n * @hidden\n */\nexport declare const removeFilter: (filter: CompositeFilterDescriptor, field: string) => CompositeFilterDescriptor;\n/**\n * @hidden\n */\nexport declare const localizeOperators: (operators: any) => (localization: any) => {\n    text: any;\n    value: any;\n}[];\n/**\n * An abstract base class for the filter-cell component ([see example]({% slug reusablecustomfilters_grid %}#toc-filter-row)).\n */\nexport declare abstract class BaseFilterCellComponent implements AfterContentInit, OnDestroy {\n    protected filterService: FilterService;\n    /**\n     * @hidden\n     */\n    readonly hostClasses: boolean;\n    operatorList: QueryList<FilterOperatorBase>;\n    operators: Array<{\n        text: string;\n        value: string;\n    }>;\n    filter: CompositeFilterDescriptor;\n    protected defaultOperators: Array<{\n        text: string;\n        value: string;\n    }>;\n    private _operators;\n    private operationListSubscription;\n    constructor(filterService: FilterService);\n    /**\n     * @hidden\n     */\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    protected filterByField(field: string): FilterDescriptor;\n    protected filtersByField(field: string): FilterDescriptor[];\n    protected removeFilter(field: string): CompositeFilterDescriptor;\n    protected updateFilter(filter: FilterDescriptor): CompositeFilterDescriptor;\n    protected applyFilter(filter: CompositeFilterDescriptor): void;\n}\n"]}