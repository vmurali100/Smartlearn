{"version":3,"file":"date-filter.component.d.ts","sources":["date-filter.component.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { OnInit } from '@angular/core';\nimport { ColumnComponent } from '../columns/column.component';\nimport { FilterService } from './filter.service';\nimport { CompositeFilterDescriptor, FilterDescriptor } from '@progress/kendo-data-query';\nimport { BaseFilterCellComponent } from './base-filter-cell.component';\nimport { FilterComponent } from './filter-component.interface';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { CalendarView, DateInputFormatPlaceholder } from '@progress/kendo-angular-dateinputs';\n/**\n * @hidden\n */\nexport declare class DateFilterComponent extends BaseFilterCellComponent implements FilterComponent, OnInit {\n    protected localization: LocalizationService;\n    /**\n     * The column with which the filter is associated.\n     * @type {ColumnComponent}\n     */\n    column: ColumnComponent;\n    /**\n     * The current root filter.\n     * @type {CompositeFilterDescriptor}\n     */\n    filter: CompositeFilterDescriptor;\n    /**\n     * The default filter operator. Defaults to `contains`.\n     * @type {string}\n     */\n    operator: string;\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    readonly currentFilter: FilterDescriptor;\n    /**\n     * Specifies the date format that is used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     */\n    /**\n    * Specifies the date format that is used when the component is not focused.\n    * By default, the `column.format` value is used (if set).\n    *\n    * @readonly\n    * @type {string}\n    */\n    format: string;\n    /**\n     * Specifies the smallest value that is valid.\n     * @type {Date}\n     */\n    min: Date;\n    /**\n     * Specifies the greatest value that is valid.\n     * @type {Date}\n     */\n    max: Date;\n    /**\n     * Defines the descriptions of the format sections in the input field.\n     * * `wide`&mdash;Displays the full description of the format section. For example, turns `MM` into `month`.\n     * Retrieved from [CLDR](https://github.com/telerik/kendo-intl/blob/develop/docs/cldr/index.md).\n     * * `narrow`&mdash;Displays the narrow description of the format section. For example, turns `MM` into `mo.`.\n     * Retrieved from [CLDR](https://github.com/telerik/kendo-intl/blob/develop/docs/cldr/index.md).\n     * * `short`&mdash;Displays the short description of the format section. For example, turns `MM` into `mo.`.\n     * Retrieved from [CLDR](https://github.com/telerik/kendo-intl/blob/develop/docs/cldr/index.md).\n     * * `formatPattern`&mdash;Directly displays the format section.\n     * * [`CustomFormatPlaceholder`]({% slug api_dateinputs_dateinputcustomformatplaceholder %})&mdash;\n     * An object that defines the description of the format sections.\n     * For example, `{ day: 'd.', month: 'M.', year: 'y', hour: 'h.' }`.\n     */\n    formatPlaceholder: DateInputFormatPlaceholder;\n    /**\n     * Specifies the hint that the component displays when its value is `null`.\n     */\n    placeholder: string;\n    /**\n     * Defines the active view that the calendar initially renders.\n     * By default, the active view is `month`.\n     *\n     * > You have to set `activeView` within the `topView`-`bottomView` range.\n     */\n    activeView: CalendarView;\n    /**\n     * Defines the bottommost calendar view, to which the user can navigate.\n     */\n    bottomView: CalendarView;\n    /**\n     * Defines the topmost calendar view, to which the user can navigate.\n     */\n    topView: CalendarView;\n    /**\n     * Determines whether to display a week number column in the `month` view of the Calendar.\n     */\n    weekNumber: boolean;\n    private readonly columnFormat;\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n    readonly currentOperator: string;\n    protected defaultOperators: Array<{\n        text: string;\n        value: string;\n    }>;\n    private _format;\n    private subscription;\n    constructor(filterService: FilterService, localization: LocalizationService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    protected localizationChange(): void;\n}\n"]}