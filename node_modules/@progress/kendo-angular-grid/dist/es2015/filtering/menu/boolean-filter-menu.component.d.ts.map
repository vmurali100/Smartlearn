{"version":3,"file":"boolean-filter-menu.component.d.ts","sources":["boolean-filter-menu.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { CompositeFilterDescriptor } from '@progress/kendo-data-query';\nimport { FilterService } from '../filter.service';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { BooleanFilterComponent } from '../boolean-filter.component';\n/**\n * Represents a Boolean-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"Discontinued\" title=\"Discontinued\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *            <kendo-grid-boolean-filter-menu\n *                [column]=\"column\"\n *                [filter]=\"filter\"\n *                [filterService]=\"filterService\"\n *                >\n *            </kendo-grid-boolean-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nexport declare class BooleanFilterMenuComponent extends BooleanFilterComponent {\n    /**\n     * @hidden\n     */\n    readonly hostClasses: boolean;\n    /**\n     * The current menu filter.\n     * @type {CompositeFilterDescriptor}\n     */\n    filter: CompositeFilterDescriptor;\n    /**\n     * The `FilterService` instance which is responsible for handling the changes in the filter descriptor.\n     */\n    filterService: FilterService;\n    idPrefix: string;\n    constructor(localization: LocalizationService);\n    /**\n     * @hidden\n     */\n    radioId(value: any): string;\n    /**\n     * @hidden\n     */\n    onChange(value: any): void;\n    /**\n     * @hidden\n     */\n    isSelected(radioValue: any): boolean;\n}\n"]}