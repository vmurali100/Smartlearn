{"version":3,"file":"list.component.d.ts","sources":["list.component.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { OnInit, EventEmitter, ElementRef, OnDestroy, AfterViewInit, AfterViewChecked, SimpleChange, OnChanges, InjectionToken, QueryList, NgZone, Renderer2, TrackByFunction, ChangeDetectorRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { ScrollerService, Action } from '../scrolling/scroller.service';\nimport { ScrollRequestService } from '../scrolling/scroll-request.service';\nimport { ColumnBase } from '../columns/column-base';\nimport { DetailTemplateDirective } from './details/detail-template.directive';\nimport { DetailsService } from './details/details.service';\nimport { ColumnsContainer } from '../columns/columns-container';\nimport { GroupDescriptor } from '@progress/kendo-data-query';\nimport { GroupableSettings } from '../grouping/group-settings';\nimport { ChangeNotificationService } from '../data/change-notification.service';\nimport { NoRecordsTemplateDirective } from './no-records-template.directive';\nimport { SuspendService } from '../scrolling/suspend.service';\nimport { GroupsService } from \"../grouping/groups.service\";\nimport { RowClassFn } from './common/row-class';\nimport { ScrollSyncService } from \"../scrolling/scroll-sync.service\";\nimport { ResizeService } from \"../layout/resize.service\";\nimport { ResizeSensorComponent } from \"@progress/kendo-angular-common\";\nimport { BrowserSupportService } from \"../layout/browser-support.service\";\nimport { SelectableSettings } from '../selection/types';\nimport { EditService } from '../editing/edit.service';\nimport { NavigationService } from '../navigation/navigation.service';\nimport { FilterableSettings } from '../filtering/filterable';\nimport { ColumnResizingService } from \"../column-resizing/column-resizing.service\";\nimport { GridItem } from '../data/grid-item.interface';\nimport { PDFService } from '../pdf/pdf.service';\nimport { ColumnInfoService } from '../common/column-info.service';\n/**\n * @hidden\n */\nexport declare const SCROLLER_FACTORY_TOKEN: InjectionToken<string>;\n/**\n * @hidden\n */\nexport declare function DEFAULT_SCROLLER_FACTORY(observable: Observable<any>): ScrollerService;\n/**\n * @hidden\n */\nexport declare class ListComponent implements OnInit, OnDestroy, AfterViewInit, AfterViewChecked, OnChanges {\n    private changeNotification;\n    private suspendService;\n    private groupsService;\n    private ngZone;\n    private renderer;\n    private scrollSyncService;\n    private resizeService;\n    private editService;\n    private supportService;\n    private navigationService;\n    private localization;\n    private columnResizingService;\n    private changeDetector;\n    private pdfService;\n    private columnInfo;\n    readonly hostClass: boolean;\n    readonly hostRole: string;\n    data: Array<any>;\n    groups: Array<GroupDescriptor>;\n    total: number;\n    rowHeight: number;\n    detailRowHeight: number;\n    take: number;\n    skip: number;\n    columns: ColumnsContainer;\n    detailTemplate: DetailTemplateDirective;\n    noRecordsTemplate: NoRecordsTemplateDirective;\n    selectable: SelectableSettings | boolean;\n    groupable: GroupableSettings | boolean;\n    filterable: FilterableSettings;\n    rowClass: RowClassFn;\n    loading: boolean;\n    trackBy: TrackByFunction<GridItem>;\n    virtualColumns: boolean;\n    isVirtual: boolean;\n    contentScroll: EventEmitter<any>;\n    pageChange: EventEmitter<Action>;\n    scrollBottom: EventEmitter<void>;\n    totalHeight: number;\n    columnsStartIdx: number;\n    readonly showFooter: boolean;\n    readonly totalWidth: number;\n    container: ElementRef;\n    lockedContainer: ElementRef;\n    lockedTable: ElementRef;\n    table: ElementRef;\n    resizeSensors: QueryList<ResizeSensorComponent>;\n    private scroller;\n    private subscriptions;\n    private scrollerSubscription;\n    private dispatcher;\n    private rowHeightService;\n    private skipScroll;\n    private rebind;\n    private containerScrollTop;\n    private viewportColumns;\n    private columnsEndIdx;\n    private viewportColumnsWidth;\n    private scrollLeft;\n    readonly lockedLeafColumns: QueryList<ColumnBase>;\n    readonly nonLockedLeafColumns: QueryList<ColumnBase>;\n    readonly nonLockedColumnsToRender: QueryList<ColumnBase>;\n    readonly leafColumns: Array<ColumnBase>;\n    readonly lockedWidth: number;\n    readonly nonLockedWidth: number;\n    readonly isLocked: boolean;\n    private rtl;\n    private columnUpdateFrame;\n    private hasLockedContainer;\n    constructor(scrollerFactory: any, detailsService: DetailsService, changeNotification: ChangeNotificationService, suspendService: SuspendService, groupsService: GroupsService, ngZone: NgZone, renderer: Renderer2, scrollSyncService: ScrollSyncService, resizeService: ResizeService, editService: EditService, supportService: BrowserSupportService, navigationService: NavigationService, scrollRequestService: ScrollRequestService, localization: LocalizationService, columnResizingService: ColumnResizingService, changeDetector: ChangeDetectorRef, pdfService: PDFService, columnInfo: ColumnInfoService);\n    ngOnInit(): void;\n    ngOnChanges(changes: {\n        [propertyName: string]: SimpleChange;\n    }): void;\n    ngDoCheck(): void;\n    ngAfterViewInit(): void;\n    ngAfterViewChecked(): void;\n    syncRowsHeight(): void;\n    ngOnDestroy(): void;\n    init(): void;\n    lockedScroll(): void;\n    lockedMousewheel(args: any): void;\n    lockedKeydown(args: any): void;\n    private detailExpand;\n    private attachContainerScroll;\n    private createScroller;\n    private scroll;\n    private onContainerScroll;\n    private handleInitialScrollToSkip;\n    private handleRowSync;\n    private handleRowNavigationLocked;\n    private scrollToVirtualRow;\n    private scrollTo;\n    private resetNavigationViewport;\n    private cleanupScroller;\n    private initResizeService;\n    private syncContainerHeight;\n    private updateViewportColumns;\n    private handleColumnScroll;\n    private updateColumnViewport;\n    private calculateViewportColumns;\n    private viewportWidthChange;\n    private normalizeScrollLeft;\n    private elementScrollLeft;\n}\n"]}