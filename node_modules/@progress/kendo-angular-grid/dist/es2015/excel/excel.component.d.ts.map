{"version":3,"file":"excel.component.d.ts","sources":["excel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { OnDestroy, QueryList, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ExcelExportData, ColumnBase, CellOptions } from '@progress/kendo-angular-excel-export';\nimport { GridComponent } from '../grid.component';\nimport { ExcelService } from './excel.service';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\n/**\n * Configures the settings for the export of Grid in Excel ([see example]({% slug excelexport_grid %})).\n */\nexport declare class ExcelComponent implements OnDestroy {\n    private localization;\n    private zone;\n    /**\n     * Specifies the file name of the exported Excel file.\n     * @default \"Export.xlsx\"\n     */\n    fileName: string;\n    /**\n     * Enables or disables column filtering in the Excel file. This behavior is different from the filtering feature of the Grid.\n     */\n    filterable: boolean;\n    /**\n     * The author of the workbook.\n     */\n    creator?: string;\n    /**\n     * The date on which the workbook was created. Defaults to `new Date()`.\n     */\n    date?: Date;\n    /**\n     * If set to `true`, the content is forwarded to [`proxyURL`](#toc-proxyurl) even if the browser supports the saving of files locally.\n     */\n    forceProxy: boolean;\n    /**\n     * The URL of the server-side proxy which streams the file to the end user.\n     *\n     * Using a proxy is required if the browser is not capable of saving files locally&mdash;for example,\n     * Internet Explorer 9 and Safari.\n     *\n     * Optionally, set up a proxy to reduce memory usage. This avoids copying the file contents in memory,\n     * but transmits it over the network instead. For this use case, set [`forceProxy`](#toc-forceproxy) to `true`\n     * to skip client-side saving even in browser that support it.\n     *\n     * In the request body, the proxy receives a POST request with the following parameters:\n     * - `contentType`&mdash;The MIME type of the file.\n     * - `base64`&mdash;The base-64 encoded file content.\n     * - `fileName`&mdash;The file name, as requested by the caller.\n     *\n     * The proxy returns the decoded file with the `\"Content-Disposition\"` header set to `attachment; filename=\"<fileName.xslx>\"`.\n     *\n     * For details on the server-side proxy usage and implementation, see the [File Saver]({% slug overview_filesaver %}) documentation.\n     */\n    proxyURL: string;\n    /**\n     * The function that is used to get the exported data options. By default, uses the current data and group of the Grid.\n     * To export data that is different from the current Grid data, provide a custom function.\n     */\n    fetchData: (component: GridComponent) => ExcelExportData | Promise<ExcelExportData> | Observable<ExcelExportData>;\n    /**\n     * If the data is grouped, the options of the cells that are inserted before the data,\n     * group, and footer cells to indicate the group hierarchy.\n     */\n    paddingCellOptions: CellOptions;\n    /**\n     * If the data is grouped, the options of the cells that are inserted before the\n     * header cells to align the headers and the column values.\n     */\n    headerPaddingCellOptions: CellOptions;\n    /**\n     * Specifies if the groups in the Excel file are collapsible.\n     */\n    collapsible: boolean;\n    /**\n     * @hidden\n     */\n    columns: QueryList<ColumnBase>;\n    private saveSubscription;\n    private dataSubscription;\n    constructor(excelService: ExcelService, localization: LocalizationService, zone: NgZone);\n    ngOnDestroy(): void;\n    protected save(component: GridComponent): void;\n    protected exportData(component: GridComponent, result: ExcelExportData): void;\n    protected saveFile(options: any): void;\n}\n"]}