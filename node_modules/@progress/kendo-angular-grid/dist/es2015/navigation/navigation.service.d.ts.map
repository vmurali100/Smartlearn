{"version":3,"file":"navigation.service.d.ts","sources":["navigation.service.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ChangeDetectorRef, EventEmitter, NgZone, OnDestroy } from '@angular/core';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { Subject } from 'rxjs';\nimport { FocusRoot } from './focus-root';\nimport { FocusableDirective } from './focusable.directive';\nimport { LogicalCell } from './logical-cell.interface';\nimport { LogicalRow } from './logical-row.interface';\nimport { NavigationCell } from './navigation-cell.interface';\nimport { NavigationChange } from './navigation-change.interface';\nimport { NavigationMetadata } from './navigation-metadata';\nimport { NavigationRow } from './navigation-row.interface';\nimport { DomEventsService } from '../common/dom-events.service';\nimport { EditService } from '../editing/edit.service';\nimport { GroupsService } from '../grouping/groups.service';\nimport { PagerContextService } from '../pager/pager-context.service';\nimport { DetailsService } from '../rendering/details/details.service';\nimport { ScrollRequestService } from '../scrolling/scroll-request.service';\n/**\n * @hidden\n */\nexport declare class NavigationViewport {\n    firstItemIndex: number;\n    lastItemIndex: number;\n    constructor(firstItemIndex: number, lastItemIndex: number);\n    containsRow(dataRowIndex: number): boolean;\n    intersects(start: number, end: number): boolean;\n}\n/**\n * @hidden\n */\nexport declare class NavigationService implements OnDestroy {\n    private zone;\n    private domEvents;\n    private pagerContextService;\n    private scrollRequestService;\n    private groupsService;\n    private detailsService;\n    private focusRoot;\n    private editService;\n    private cd;\n    private localization;\n    private focusableParent;\n    readonly changes: Subject<NavigationChange>;\n    readonly cellKeydown: EventEmitter<any>;\n    metadata: NavigationMetadata;\n    readonly enabled: boolean;\n    readonly activeCell: NavigationCell;\n    readonly activeRow: NavigationRow;\n    viewport: NavigationViewport;\n    columnViewport: NavigationViewport;\n    private activeRowIndex;\n    private alive;\n    private active;\n    private mode;\n    private model;\n    private cursor;\n    private meta;\n    private subs;\n    private pendingRowIndex;\n    private virtualCell;\n    private readonly activeDataRow;\n    constructor(zone: NgZone, domEvents: DomEventsService, pagerContextService: PagerContextService, scrollRequestService: ScrollRequestService, groupsService: GroupsService, detailsService: DetailsService, focusRoot: FocusRoot, editService: EditService, cd: ChangeDetectorRef, localization: LocalizationService, focusableParent: FocusableDirective);\n    init(meta: NavigationMetadata): void;\n    ngOnDestroy(): void;\n    registerCell(cell: LogicalCell): void;\n    registerCellOnCurrentRow(cell: LogicalCell): void;\n    unregisterCell(index: number, rowIndex: number, cell: LogicalCell): void;\n    registerRow(row: LogicalRow): void;\n    updateRow(row: LogicalRow): void;\n    unregisterRow(index: number, row: LogicalRow): void;\n    isCellFocusable(cell: LogicalCell): boolean;\n    isCellFocused(cell: LogicalCell): boolean;\n    navigateTo(el: Element): void;\n    tryFocus(el: Element): boolean;\n    needsViewport(): boolean;\n    setViewport(firstItemIndex: number, lastItemIndex: number): void;\n    setColumnViewport(firstItemIndex: number, lastItemIndex: number): void;\n    focusCell(rowIndex?: number, colIndex?: number): NavigationCell;\n    focusNextCell(wrap?: boolean): NavigationCell;\n    focusPrevCell(wrap?: boolean): NavigationCell;\n    toggle(active: boolean): void;\n    hasFocus(): boolean;\n    autoFocusCell(start: number, end: number): boolean;\n    private focusAdjacentCell;\n    private enterCell;\n    private leaveCell;\n    private activateElements;\n    private deactivateElements;\n    private activateRow;\n    private moveCursorFwd;\n    private moveCursorBwd;\n    private onCursorKeydown;\n    private onContentKeydown;\n    private onCellKeydown;\n    private onCursorChanges;\n    private onFocusOut;\n    private onWindowBlur;\n    private onKeydown;\n    private onTabout;\n}\n"]}