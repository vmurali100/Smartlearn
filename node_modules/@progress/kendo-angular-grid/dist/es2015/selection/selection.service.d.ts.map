{"version":3,"file":"selection.service.d.ts","sources":["selection.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, OnDestroy } from '@angular/core';\nimport { SelectableSettings, SelectionEvent } from './types';\nimport { RowSelectedFn } from '../rendering/common/row-class';\nimport { DomEventsService } from '../common/dom-events.service';\nimport { LocalDataChangesService } from '../editing/local-data-changes.service';\n/**\n * @hidden\n */\ndeclare type SelectionServiceSettings = {\n    rowSelected: RowSelectedFn;\n    selectable: boolean | SelectableSettings;\n    view: {\n        accessor: Function;\n        at: Function;\n        length: Number;\n    };\n};\n/**\n * @hidden\n */\nexport declare class SelectionService implements OnDestroy {\n    private domEvents;\n    private localDataChangesService?;\n    changes: EventEmitter<SelectionEvent>;\n    lastSelectionStartIndex: number;\n    currentSelection: any[];\n    selectAllChecked: boolean;\n    settings: SelectionServiceSettings;\n    active: boolean;\n    readonly enableMarquee: boolean;\n    mouseDownEventArgs: any;\n    dragging: boolean;\n    private cellClickSubscription;\n    private mousedownSubscription;\n    private dataChangedSubscription;\n    private _selectAllState;\n    constructor(domEvents: DomEventsService, localDataChangesService?: LocalDataChangesService);\n    init(settings: any): void;\n    isSelected(index: number): boolean;\n    handleClick(item: any, event: any): void;\n    toggle(item: any): any;\n    toggleByIndex(index: number): any;\n    select(item: any): any;\n    deselect(removedItem: any): void;\n    addAllTo(item: any, ctrlKey: boolean): any;\n    updateAll(selectAllChecked: boolean): void;\n    selectRange(startIndex: number, endIndex: number): any;\n    readonly selectAllState: any;\n    readonly selected: number[];\n    readonly options: SelectableSettings;\n    ngOnDestroy(): void;\n    targetArgs(): any;\n    addSubscriptions(): void;\n    private getIterator;\n    private removeSubscriptions;\n}\nexport {};\n"]}