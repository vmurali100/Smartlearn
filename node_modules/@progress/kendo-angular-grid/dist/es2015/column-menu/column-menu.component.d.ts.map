{"version":3,"file":"column-menu.component.d.ts","sources":["column-menu.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { TemplateRef, OnChanges, OnDestroy } from '@angular/core';\nimport { LocalizationService } from \"@progress/kendo-angular-l10n\";\nimport { SinglePopupService } from '../common/single-popup.service';\nimport { ColumnMenuService } from './column-menu.service';\nimport { ColumnMenuSettings } from './column-menu-settings.interface';\n/**\n * Represents the [column menu]({% slug columnmenu_grid %}) component.\n */\nexport declare class ColumnMenuComponent implements OnChanges, OnDestroy {\n    protected popupService: SinglePopupService;\n    localization: LocalizationService;\n    service: ColumnMenuService;\n    /**\n     * @hidden\n     */\n    standalone: boolean;\n    /**\n     * The Grid column instance to control with the menu.\n     */\n    column: any;\n    /**\n     * The settings for the Column Menu.\n     */\n    settings: ColumnMenuSettings;\n    /**\n     * The descriptors by which the data will be sorted.\n     * Typically bound to the same value as [GridComponent.sort]({% slug api_grid_gridcomponent %}#toc-sort).\n     */\n    sort: any;\n    /**\n     * The descriptor by which the data will be filtered.\n     * Typically bound to the same value as [GridComponent.filter]({% slug api_grid_gridcomponent %}#toc-filter).\n     */\n    filter: any;\n    /**\n     * @hidden\n     */\n    sortable: any;\n    /**\n     * @hidden\n     */\n    columnMenuTemplate: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    expandedFilter: boolean;\n    /**\n     * @hidden\n     */\n    expandedColumns: boolean;\n    private popupRef;\n    private closeSubscription;\n    constructor(popupService: SinglePopupService, localization: LocalizationService, service: ColumnMenuService);\n    /**\n     * @hidden\n     */\n    readonly isActive: boolean;\n    /**\n     * @hidden\n     */\n    readonly hasFilter: boolean;\n    /**\n     * @hidden\n     */\n    readonly hasSort: boolean;\n    /**\n     * @hidden\n     */\n    readonly hasColumnChooser: boolean;\n    /**\n     * @hidden\n     */\n    readonly hasLock: boolean;\n    ngOnChanges(): void;\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    toggle(e: any, anchor: any, template: any): void;\n    /**\n     * @hidden\n     */\n    close(): void;\n    /**\n     * @hidden\n     */\n    onColumnsExpand(): void;\n    /**\n     * @hidden\n     */\n    onFilterExpand(): void;\n}\n"]}