{"version":3,"file":"column-chooser.component.d.ts","sources":["column-chooser.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { NgZone, Renderer2, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { PopupService } from '@progress/kendo-angular-popup';\nimport { ColumnInfoService } from '../common/column-info.service';\nimport { LocalizationService } from \"@progress/kendo-angular-l10n\";\n/**\n * Represents the component for selecting columns in the Grid. To enable the user to show or hide columns,\n * add the component inside a [`ToolbarTemplate`]({% slug api_grid_toolbartemplatedirective %}) directive.\n *\n * @example\n * {% meta height:300 %}\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\">\n *          <ng-template kendoGridToolbarTemplate>\n *             <kendo-grid-column-chooser></kendo-grid-column-chooser>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n * {% endmeta %}\n */\nexport declare class ColumnChooserComponent implements OnDestroy {\n    localization: LocalizationService;\n    private columnInfoService;\n    private popupService;\n    private ngZone;\n    private renderer;\n    private changeDetector;\n    /**\n     * Specifies if the changes in the visibility of the column will be immediately applied.\n     */\n    autoSync: boolean;\n    /**\n     * Specifies if all columns can be hidden.\n     */\n    allowHideAll: boolean;\n    readonly columns: any[];\n    private popupRef;\n    private closeClick;\n    constructor(localization: LocalizationService, columnInfoService: ColumnInfoService, popupService: PopupService, ngZone: NgZone, renderer: Renderer2, changeDetector: ChangeDetectorRef);\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    toggle(anchor: any, template: any): void;\n    /**\n     * @hidden\n     */\n    onApply(changed: any[]): void;\n    /**\n     * @hidden\n     */\n    onChange(changed: any[]): void;\n    private close;\n    private detachClose;\n}\n"]}