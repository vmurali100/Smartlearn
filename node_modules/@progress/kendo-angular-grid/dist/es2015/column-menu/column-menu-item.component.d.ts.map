{"version":3,"file":"column-menu-item.component.d.ts","sources":["column-menu-item.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, OnChanges } from '@angular/core';\nimport { ColumnMenuItemContentTemplateDirective } from './column-menu-item-content-template.directive';\n/**\n * Represents an item that can be placed inside a\n * [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\" [resizable]=\"true\" #grid>\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\" let-column=\"column\">\n *              <kendo-grid-columnmenu-item icon=\"arrows-resizing\" text=\"Fit column\"\n *                  (itemClick)=\"grid.autoFitColumn(column); service.close()\">\n *              </kendo-grid-columnmenu-item>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nexport declare class ColumnMenuItemComponent implements OnChanges {\n    /**\n     * Fires when the item is clicked.\n     */\n    itemClick: EventEmitter<any>;\n    /**\n     * Fires when the content is expanded.\n     */\n    expand: EventEmitter<any>;\n    /**\n     * Fires when the content is collapsed.\n     */\n    collapse: EventEmitter<any>;\n    /**\n     * Specifies the name of the [font icon]({% slug icons %}#toc-list-of-font-icons)\n     * that will be rendered for the item.\n     */\n    icon: string;\n    /**\n     * Specifies the item text.\n     */\n    text: string;\n    /**\n     * Specifies if the item is selected.\n     */\n    selected: boolean;\n    /**\n     * Specifies if the item is disabled.\n     */\n    disabled: boolean;\n    /**\n     * Specifies if the item is expanded.\n     */\n    expanded: boolean;\n    contentTemplate: ColumnMenuItemContentTemplateDirective;\n    readonly iconClass: string;\n    contentState: string;\n    ngOnChanges(changes: any): void;\n    /**\n     * @hidden\n     */\n    onClick(e: any): void;\n    private updateContentState;\n}\n"]}