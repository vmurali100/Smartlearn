{"version":3,"file":"span-column.component.d.ts","sources":["span-column.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { TemplateRef, QueryList } from '@angular/core';\nimport { CellTemplateDirective } from '../rendering/cell-template.directive';\nimport { EditTemplateDirective } from '../editing/edit-template.directive';\nimport { ColumnBase } from './column-base';\nimport { ColumnComponent } from \"./column.component\";\n/**\n * @hidden\n */\nexport declare function isSpanColumnComponent(column: any): column is SpanColumnComponent;\n/**\n * Represents a column which can be spanned over multiple data cells while the individual\n * header and footer cells are retained ([see example]({% slug spanned_columns_grid %})).\n * Enables you to achieve more flexible layout while keeping the built-in UI element for\n * [sorting]({% slug sorting_grid %}), [filtering]({% slug filtering_grid %}), and\n * [grouping]({% slug groupingbasics_grid %}). Wrap the columns that will be\n * merged inside the `<kendo-grid-span-column>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid\n *              [sortable]=\"true\"\n *              [filterable]=\"true\"\n *              [kendoGridBinding]=\"products\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-span-column>\n *              <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *              </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" filter=\"numeric\" width=\"180\" format=\"{0:c}\">\n *              </kendo-grid-column>\n *          </kendo-grid-span-column>\n *          <kendo-grid-column field=\"Discontinued\" width=\"120\" filter=\"boolean\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *   public products = [{\n *      \"ProductID\": 1,\n *      \"ProductName\": \"Chai\",\n *      \"UnitPrice\": 18.0000,\n *      \"Discontinued\": true\n *    }, {\n *      \"ProductID\": 2,\n *      \"ProductName\": \"Chang\",\n *      \"UnitPrice\": 19.0000,\n *      \"Discontinued\": false\n *    }\n *   ];\n * }\n *\n * ```\n *\n * By default, the data cell displays the data for the specified fields. To further customize\n * the span-column functionality, use a [cell template]({% slug api_grid_celltemplatedirective %}).\n *\n * ```html-no-run\n * <kendo-grid-span-column>\n *  <kendo-grid-column field=\"field1\" title=\"Field 1\"></kendo-grid-column>\n *  <kendo-grid-column field=\"field2\" title=\"Field 2\"></kendo-grid-column>\n *    <ng-template kendoGridCellTemplate let-dataItem>\n *        <h5>{{ dataItem.field1 }}</h5>\n *        <p>{{ dataItem.field2 }}</p>\n *    </ng-template>\n *  </kendo-grid-span-column>\n * ```\n */\nexport declare class SpanColumnComponent extends ColumnBase {\n    readonly isSpanColumn: boolean;\n    template: QueryList<CellTemplateDirective>;\n    editTemplate: QueryList<EditTemplateDirective>;\n    /**\n     * @hidden\n     */\n    childColumns: QueryList<ColumnComponent>;\n    /**\n     * @hidden\n     */\n    title: string;\n    /**\n     * @hidden\n     */\n    headerStyle: {\n        [key: string]: string;\n    };\n    /**\n     * @hidden\n     */\n    footerStyle: {\n        [key: string]: string;\n    };\n    /**\n     * @hidden\n     */\n    headerClass: string | string[] | Set<string> | {\n        [key: string]: any;\n    };\n    /**\n     * @hidden\n     */\n    footerClass: string | string[] | Set<string> | {\n        [key: string]: any;\n    };\n    /**\n     * @hidden\n     */\n    includeInChooser: boolean;\n    /**\n     * Defines whether the edit template of the column will be rendered. The default value is `false`.\n     *\n     * > To enable the editing functionality for a spanned column, set an edit template for it.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-span-column [editable]=\"false\">\n     *      <kendo-grid-column field=\"UnitPrice\">\n     *      </kendo-grid-column>\n     *      <kendo-grid-column field=\"ProductName\">\n     *      </kendo-grid-column>\n     *      <ng-template kendoGridEditTemplate>\n     *         .....\n     *      </ng-template>\n     *    </kendo-grid-span-column>\n     * </kendo-grid>\n     * ```\n     */\n    editable: boolean;\n    /**\n     * @hidden\n     * added for backwards compitability\n     */\n    width: number;\n    /**\n     * @hidden\n     */\n    readonly leafIndex: number;\n    private _editable;\n    private _locked;\n    constructor(parent?: ColumnBase);\n    /**\n     * @hidden\n     */\n    readonly templateRef: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    readonly editTemplateRef: TemplateRef<any>;\n    /**\n     * @hidden\n     */\n    readonly colspan: number;\n    /**\n     * Toggles the locked (frozen) state of the columns. Locked columns are visible\n     * at all times during the horizontal scrolling of the Grid.\n     *\n     * For the option to work properly, make sure that:\n     * - Scrolling is enabled.\n     * - The `height` option of the Grid is set.\n     * - The widths of all Grid columns are explicitly set in pixels. In this way,\n     * the Grid adjusts the layout of the locked and unlocked columns.\n     *\n     * @default false\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n     *          <kendo-grid-span-column [locked]=\"true\">\n     *             <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n     *             </kendo-grid-column>\n     *             <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"200\">\n     *             </kendo-grid-column>\n     *          </kendo-grid-span-column>\n     *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n     *          </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     *\n     * class AppComponent {\n     *    public gridData: any[];\n     *\n     *    constructor() {\n     *        this.gridData = products;\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     *\n     * ```\n     */\n    locked: boolean;\n    readonly childrenArray: any[];\n    readonly hasChildren: boolean;\n}\n"]}