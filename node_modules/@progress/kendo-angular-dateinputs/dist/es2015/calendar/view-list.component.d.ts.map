{"version":3,"file":"view-list.component.d.ts","sources":["view-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, Renderer2, AfterViewChecked, AfterViewInit, TemplateRef } from '@angular/core';\nimport { IntlService } from '@progress/kendo-angular-intl';\nimport { PageAction, ScrollAction } from '../virtualization/services/scroller.service';\nimport { VirtualizationComponent } from '../virtualization/virtualization.component';\nimport { BusViewService } from './services/bus-view.service';\nimport { CalendarDOMService } from './services/dom.service';\nimport { ViewService } from './models/view-service.interface';\nimport { CalendarViewEnum } from './models/view.enum';\n/**\n * @hidden\n */\nexport declare class ViewListComponent implements OnChanges, OnDestroy, AfterViewInit, AfterViewChecked {\n    private bus;\n    private cdr;\n    private intl;\n    private dom;\n    private renderer;\n    cellTemplateRef: TemplateRef<any>;\n    weekNumberTemplateRef: TemplateRef<any>;\n    headerTitleTemplateRef: TemplateRef<any>;\n    activeView: CalendarViewEnum;\n    cellUID: string;\n    focusedDate: Date;\n    isActive: boolean;\n    min: Date;\n    max: Date;\n    value: Date;\n    weekNumber: boolean;\n    activeDateChange: EventEmitter<Date>;\n    valueChange: EventEmitter<Date>;\n    pageChange: EventEmitter<any>;\n    virtualization: VirtualizationComponent;\n    list: ElementRef;\n    readonly getComponentClass: boolean;\n    readonly getComponentMonthClass: boolean;\n    readonly getComponentYearClass: boolean;\n    readonly getComponentDecadeClass: boolean;\n    readonly getComponentCenturyClass: boolean;\n    service: ViewService;\n    activeDate: Date;\n    dates: Date[];\n    cols: number[];\n    colWidth: number;\n    weekNames: string[];\n    take: number;\n    skip: number;\n    total: number;\n    bottomOffset: number;\n    viewHeight: number;\n    viewOffset: number;\n    private animateToIndex;\n    private indexToScroll;\n    private showWeekNumbers;\n    private minViewsToRender;\n    private intlSubscription;\n    constructor(bus: BusViewService, cdr: ChangeDetectorRef, intl: IntlService, dom: CalendarDOMService, renderer: Renderer2);\n    ngOnInit(): void;\n    ngOnChanges(changes: any): void;\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    ngAfterViewChecked(): void;\n    onPageChange({ skip }: PageAction): void;\n    scrollChange({ offset }: ScrollAction): void;\n    setActiveDate(index: number): void;\n    handleDateChange(candidate: Date): void;\n    isMonthView(): boolean;\n    isScrolled(): boolean;\n    private getBottomOffset;\n    private getScrollableHeight;\n    private getTake;\n    private getWeekNames;\n    private intlChange;\n}\n"]}