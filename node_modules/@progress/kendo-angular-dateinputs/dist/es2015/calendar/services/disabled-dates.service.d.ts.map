{"version":3,"file":"disabled-dates.service.d.ts","sources":["disabled-dates.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Day } from '@progress/kendo-date-math';\nimport { Subject } from 'rxjs';\n/**\n * @hidden\n */\nexport declare class DisabledDatesService {\n    /**\n     * Emits every time the `isDateDisabled` method changes.\n     */\n    changes: Subject<void>;\n    /**\n     * Based on the user-defined `disabledDates` input evaluates if the date is disabled.\n     * If not set, returns `false`.\n     */\n    isDateDisabled: (date: Date) => boolean;\n    /**\n     * Configures the `isDateDisabled` function.\n     *\n     * * If a function is provided, uses it as-is and passes each date to it for evaluation.\n     * The time part is set to `midnight`.\n     * * If a `Date[]` is provided, creates a function that checks the targeted date against\n     * the listed dates and, if the targeted date is listed, marks it as disabled.\n     * * If a `Day[]` is provided, creates a function that evaluates the provided days of the\n     * week as disabled.\n     */\n    initialize(disabledDates: ((date: Date) => boolean) | Date[] | Day[]): void;\n    private notifyInvalidInput;\n    private notifyServiceChange;\n}\n"]}