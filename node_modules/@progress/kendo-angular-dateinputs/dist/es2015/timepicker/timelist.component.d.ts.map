{"version":3,"file":"timelist.component.d.ts","sources":["timelist.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, ElementRef, Renderer2, NgZone, Injector, OnChanges, OnInit, OnDestroy } from '@angular/core';\nimport { DateFormatPart } from '@progress/kendo-angular-intl';\nimport { VirtualizationComponent } from '../virtualization/virtualization.component';\nimport { ListItem } from './models/list-item.interface';\nimport { ListService } from './models/list-service.interface';\nimport { TimePickerDOMService } from './services/dom.service';\n/**\n * @hidden\n */\nexport declare class TimeListComponent implements OnChanges, OnInit, OnDestroy {\n    private element;\n    private injector;\n    private dom;\n    private renderer;\n    private zone;\n    min: Date;\n    max: Date;\n    part: DateFormatPart;\n    step: number;\n    disabled: boolean;\n    value: Date;\n    valueChange: EventEmitter<Date>;\n    virtualization: VirtualizationComponent;\n    readonly tabIndex: number;\n    componentClass: boolean;\n    animateToIndex: boolean;\n    isActive: boolean;\n    skip: number;\n    total: number;\n    service: ListService;\n    itemHeight: number;\n    listHeight: number;\n    topOffset: number;\n    bottomOffset: number;\n    bottomThreshold: number;\n    topThreshold: number;\n    style: any;\n    data: ListItem[];\n    private indexToScroll;\n    private scrollSubscription;\n    private domEvents;\n    constructor(element: ElementRef, injector: Injector, dom: TimePickerDOMService, renderer: Renderer2, zone: NgZone);\n    ngOnChanges(changes: any): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    ngAfterViewChecked(): void;\n    handleChange(dataItem: ListItem): void;\n    handleItemClick(args: any): void;\n    /**\n     * Focuses the host element of the TimeList.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timelist.focus()\">Focus TimeList</button>\n     *  <kendo-timelist #timelist></kendo-timelist>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus(): void;\n    /**\n     * Blurs the TimeList component.\n     */\n    blur(): void;\n    private itemOffset;\n    private hasMissingValue;\n    private scrollOnce;\n    private serviceSettings;\n    private selectedIndex;\n    private textHasChanged;\n    private handleKeyDown;\n    private bindEvents;\n}\n"]}