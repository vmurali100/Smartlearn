{"version":3,"file":"date-range-end-input.directive.d.ts","sources":["date-range-end-input.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ElementRef, Renderer2, NgZone, OnInit, OnDestroy } from '@angular/core';\nimport { DateInputComponent } from '../dateinput/dateinput.component';\nimport { AutoCorrectOn } from './auto-correct-on.type';\nimport { DateRangeInput } from './date-range-input';\nimport { DateRangeService } from './date-range.service';\nimport { SelectionRange } from '../calendar/models/selection-range.interface';\n/**\n * A directive which manages the end range selection.\n *\n * > You can use the DateRangeEndInputDirective only with a DateInput component.\n */\nexport declare class DateRangeEndInputDirective extends DateRangeInput implements OnInit, OnDestroy {\n    private rangeService;\n    private dateInput;\n    /**\n     * Specifies the auto-correction behavior. If the start date is greater than the end date, the\n     * directive fixes the date range to a single date either on input change or on blur\n     * ([see example]({% slug autocorrect_daterange %}#toc-configuring-input-directives)).\n     *\n     * By default, the component does not perform any auto-correction.\n     */\n    autoCorrectOn: AutoCorrectOn;\n    /**\n     * Specifies the navigation behavior of the calendar when the active end is changed on input focus. When enabled,\n     * the calendar navigates to the value of the focused input. Otherwise, the calendar displays the last picked date.\n     *\n     * By default, the automatic navigation behavior on input focus is disabled.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <h5>Toggle input focus to see the calendar navigating between range ends.</h5>\n     *  <kendo-daterange>\n     *      <kendo-dateinput kendoDateRangeStartInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"start\"></kendo-dateinput>\n     *      <kendo-dateinput kendoDateRangeEndInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"end\"></kendo-dateinput>\n     *  </kendo-daterange>\n     * `\n     * })\n     * class AppComponent {\n     *   public start: Date = new Date(2018, 3, 10);\n     *   public end: Date = new Date(2018, 10, 20);\n     * }\n     * ```\n     */\n    navigateCalendarOnFocus: boolean;\n    constructor(rangeService: DateRangeService, dateInput: DateInputComponent, element: ElementRef, renderer: Renderer2, zone: NgZone);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    protected getRange(value: Date, correctOn: AutoCorrectOn): SelectionRange;\n    protected updateInputValue(range: SelectionRange): void;\n}\n"]}