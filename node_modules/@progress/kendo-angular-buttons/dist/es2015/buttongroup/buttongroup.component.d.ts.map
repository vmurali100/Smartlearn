{"version":3,"file":"buttongroup.component.d.ts","sources":["buttongroup.component.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ButtonDirective } from '../button/button.directive';\nimport { EventEmitter, QueryList, OnInit, OnDestroy, AfterContentChecked, AfterViewChecked, AfterContentInit, ElementRef, SimpleChanges } from '@angular/core';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { ButtonGroupSelection } from '../button/selection-settings';\nimport { KendoButtonService } from '../button/button.service';\nimport { ButtonLook } from '../button-look';\nimport { PreventableEvent } from '../preventable-event';\n/**\n * Represents the Kendo UI ButtonGroup component for Angular.\n */\nexport declare class ButtonGroupComponent implements OnInit, OnDestroy, AfterContentChecked, AfterViewChecked, AfterContentInit {\n    private service;\n    private element;\n    /**\n     * By default, the ButtonGroup is enabled.\n     * To disable the whole group of buttons, set its `disabled` attribute to `true`.\n     *\n     * To disable a specific button, set its own `disabled` attribute to `true`\n     * and leave the `disabled` attribute of the ButtonGroup undefined.\n     * If you define the `disabled` attribute of the ButtonGroup, it will take\n     * precedence over the `disabled` attributes of the underlying buttons and they will be ignored.\n     *\n     * For more information on how to configure the Button, refer to\n     * its [API documentation]({% slug api_buttons_buttondirective %}).\n     */\n    disabled: boolean;\n    /**\n     * By default, the selection mode of the ButtonGroup is set to `multiple`.\n     */\n    selection: ButtonGroupSelection;\n    /**\n     * Sets the width of the ButtonGroup.\n     * If the width of the ButtonGroup is set:\n     * - The buttons resize automatically to fill the full width of the group wrapper.\n     * - The buttons acquire the same width.\n     */\n    width: string;\n    /**\n     * Changes the visual appearance by using alternative styling options\n     * ([more information and examples]({% slug styling_buttongroup %})).\n     * The `look` property of the ButtonGroup takes precedence over the `look` property\n     * of the individual buttons that are part of the group.\n     *\n     * The available values are:\n     * * `flat`\n     * * `outline`\n     */\n    look: ButtonLook;\n    /**\n     * Specifies the [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n    tabIndex: number;\n    /**\n     * Fires every time keyboard navigation occurs.\n     */\n    navigate: EventEmitter<PreventableEvent>;\n    buttons: QueryList<ButtonDirective>;\n    private _tabIndex;\n    private currentTabIndex;\n    private direction;\n    private subscription;\n    private localizationChangeSubscription;\n    readonly wrapperClass: boolean;\n    readonly disabledClass: boolean;\n    readonly stretchedClass: boolean;\n    readonly isFlat: boolean;\n    readonly isBare: boolean;\n    readonly isOutline: boolean;\n    readonly getRole: string;\n    readonly dir: string;\n    readonly ariaDisabled: boolean;\n    readonly wrapperWidth: string;\n    readonly wrapperTabIndex: number;\n    /**\n     * @hidden\n     */\n    keydown(event: any): void;\n    /**\n     * @hidden\n     */\n    onFocus(): void;\n    /**\n     * @hidden\n     */\n    focusout(event: any): void;\n    constructor(service: KendoButtonService, localization: LocalizationService, element: ElementRef);\n    ngOnInit(): void;\n    ngOnChanges(change: SimpleChanges): void;\n    ngAfterContentInit(): void;\n    ngAfterViewChecked(): void;\n    ngOnDestroy(): void;\n    ngAfterContentChecked(): void;\n    protected navigateFocus(event: any): void;\n    protected deactivate(buttons: Array<ButtonDirective>): void;\n    protected activate(buttons: Array<ButtonDirective>): void;\n    protected defocus(buttons: Array<ButtonDirective>): void;\n    protected focus(buttons: Array<ButtonDirective>): void;\n    private verifySettings;\n    private isSelectionSingle;\n}\n"]}