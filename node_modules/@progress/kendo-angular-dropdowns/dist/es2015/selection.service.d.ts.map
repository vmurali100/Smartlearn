{"version":3,"file":"selection.service.d.ts","sources":["selection.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter } from '@angular/core';\n/**\n * @hidden\n */\nexport interface SelectionEvent {\n    indices: number[];\n    added?: number;\n    removed?: number;\n    newSelection?: boolean;\n}\n/**\n * @hidden\n */\nexport declare class SelectionService {\n    onSelect: EventEmitter<SelectionEvent>;\n    onChange: EventEmitter<SelectionEvent>;\n    onFocus: EventEmitter<number>;\n    total: number;\n    private selectedIndices;\n    private focusedIndex;\n    getTotal(): number;\n    isSelected(index: number): boolean;\n    isFocused(index: number): boolean;\n    focus(index: number): void;\n    select(index: number): void;\n    add(index: number): void;\n    unselect(index: number): void;\n    change(index: number): void;\n    resetSelection(index: number | number[]): void;\n    readonly selected: number[];\n    focused: number;\n}\n"]}