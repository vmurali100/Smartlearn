{"version":3,"file":"data.service.d.ts","sources":["data.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\n/**\n * @hidden\n */\nexport declare class DataService {\n    grouped: boolean;\n    groupIndices: number[];\n    view: any[];\n    private _data;\n    private _flatData;\n    data: any[];\n    /**\n     * @hidden\n     * Used to get the actual items count, i.e. excluding the header items in case of grouping.\n     */\n    readonly itemsCount: number;\n    /**\n     * @hidden\n     * Used to determine if the component received grouped data.\n     */\n    isGrouped(data: any[]): boolean;\n    /**\n     * @hidden\n     * Used to calculate the last item index of each group.\n     */\n    getGroupIndices(data: any[]): number[];\n    /**\n     * @hidden\n     * Used to get a flat array containing all items matching certain criteria.\n     */\n    filter(predicate: (value: any, index: number, array: any[]) => boolean): any[];\n    /**\n     * @hidden\n     * Used to get the index of a given data item.\n     */\n    indexOf(item: any, startFrom?: number): number;\n    /**\n     * @hidden\n     * Used to get the index of a data item based on an expression.\n     */\n    findIndex(predicate: any, startFrom?: number): number;\n    /**\n     * @hidden\n     * Used to get the closest group header prior to an item index.\n     */\n    closestGroup(index: number): any;\n    /**\n     * @hidden\n     * Used to get the first item matching the criteria.\n     */\n    find(predicate: any): number;\n    /**\n     * @hidden\n     * Used to get the true index in a flattened data array.\n     */\n    flatIndex(index: number): any;\n    /**\n     * @hidden\n     * Used to get the item at the provided index.\n     */\n    itemAt(index: number): any;\n    /**\n     * @hidden\n     * Used to get the group at the provided index.\n     */\n    groupAt(index: number): any;\n    /**\n     * @hidden\n     * Used to get the field by which the data is grouped.\n     */\n    groupField(): any;\n    /**\n     * @hidden\n     * Used to get the group to which a dataItem belongs.\n     */\n    itemGroup(item: any): any;\n    private flatten;\n}\n"]}