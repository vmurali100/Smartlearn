{"version":3,"file":"pdf-export.component.d.ts","sources":["pdf-export.component.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ElementRef } from '@angular/core';\nimport { pdf, DrawOptions, Group } from '@progress/kendo-drawing';\nimport { SaveOptions } from '@progress/kendo-file-saver';\nimport { PDFTemplateDirective } from './pdf-template.directive';\nimport { PDFMarginComponent } from './pdf-margin.component';\n/**\n * @hidden\n *\n * Re-export PaperSize to work around a bug in the the API reference generator.\n *\n * The type will be linked to the kendo-drawing documentation\n * by using the slug provided in api-type-links.json\n */\nexport declare type PaperSize = pdf.PaperSize;\n/**\n * Represents the [Kendo UI PDF Export component for Angular]({% slug overview_pdfexport %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *     <div class=\"example-config\">\n *       <button class=\"k-button\" (click)=\"pdf.saveAs('document.pdf')\">\n *         Save As PDF...\n *       </button>\n *     </div>\n *\n *     <kendo-pdf-export #pdf paperSize=\"A4\" margin=\"2cm\">\n *       Content goes here\n *     </kendo-pdf-export>\n *   `\n * })\n * export class AppComponent {\n * }\n * ```\n */\nexport declare class PDFExportComponent implements pdf.PDFOptions {\n    protected element: ElementRef;\n    /**\n     * The author (metadata) of the PDF document.\n     */\n    author: string;\n    /**\n     * A flag that indicates whether to produce actual hyperlinks in the exported PDF file.\n     * It is also possible to set a CSS selector. All matching links will be ignored.\n     */\n    avoidLinks: boolean | string;\n    /**\n     * An optional CSS selector that specifies the elements which cause the page breaks\n     * ([see example]({% slug multipagecontent_pdfexport %}#toc-manual-page-breaking)).\n     */\n    forcePageBreak: string;\n    /**\n     * An optional CSS selector that specifies the elements which should not be split across the pages\n     * ([see example]({% slug multipagecontent_pdfexport %}#toc-preventing-page-breaking-in-elements)).\n     */\n    keepTogether: string;\n    /**\n     * The creator of the PDF document.\n     * @default \"Kendo UI PDF Generator\"\n     */\n    creator: string;\n    /**\n     * The date when the PDF document is created. Defaults to `new Date()`.\n     */\n    date: Date;\n    /**\n     * The forced resolution of the images in the exported PDF document\n     * ([see example]({% slug embeddedimages_pdfexport %})).\n     * By default, the images are exported at their full resolution.\n     */\n    imageResolution: number;\n    /**\n     * Specifies the name of the exported PDF file.\n     * @default \"Export.pdf\"\n     */\n    fileName: string;\n    /**\n     * If set to `true`, the content is forwarded to `proxyURL` even if the\n     * browser supports local saving of files.\n     */\n    forceProxy: boolean;\n    /**\n     * The keywords (metadata) of the PDF document.\n     */\n    keywords: string;\n    /**\n     * A flag that indicates if the page will be in a landscape orientation\n     * ([see example]({% slug hyperlinks_pdfexport %})).\n     * By default, the page is in a portrait orientation.\n     *\n     * @default false\n     */\n    landscape: boolean;\n    /**\n     * Specifies the margins of the page.\n     *\n     * > Numbers are treated as points (`\"pt\"`).\n     *\n     * The supported units are:\n     * * `\"mm\"`\n     * * `\"cm\"`\n     * * `\"in\"`\n     * * `\"pt\"` (default).\n     *\n     */\n    margin: string | number | pdf.PageMargin;\n    /**\n     * Specifies the paper size of the PDF document ([see example]({% slug multipagecontent_pdfexport %}#toc-automatic-page-breaking)).\n     * Defaults to `\"auto\"` which means that the paper size is determined by the content.\n     * The size of the content in pixels matches the size of the output in points (1 pixel = 1/72 inch).\n     * If `paperSize` is set, the content is split across multiple pages. This enables the `repeatHeaders` and\n     * `scale` options, and allows you to specify a template.\n     *\n     * The supported values are:\n     * * A predefined size. The supported paper sizes are: `A0-A10`, `B0-B10`, `C0-C10`, `Executive`, `Folio`, `Legal`, `Letter`, `Tabloid`.\n     * * An array of two numbers which specify the width and height in points (1pt = 1/72in).\n     * * An array of two strings which specify the width and height in units. The supported units are `\"mm\"`, `\"cm\"`, `\"in\"`, and `\"pt\"`.\n     */\n    paperSize: PaperSize;\n    /**\n     * Specifies if the `<thead>` elements of the tables will be repeated on each page\n     * ([see example]({% slug recurrenttableheaders_pdfexport %})).\n     */\n    repeatHeaders: boolean;\n    /**\n     * A scale factor ([see example]({% slug scalingofcontent_pdfexport %})).\n     * The text size on the screen might be too big for printing.\n     * To scale down the output in PDF, use this option.\n     *\n     * @default 1\n     */\n    scale: number;\n    /**\n     * A key/value dictionary of form values which will be sent to the proxy.\n     * Can be used to submit Anti-Forgery tokens and other metadata.\n     */\n    proxyData?: {\n        [key: string]: string;\n    };\n    /**\n     * The URL of the server-side proxy which streams the file to the end user. You need to use a proxy if\n     * the browser is not capable of saving files locally&mdash;for example, Internet Explorer 9 and Safari.\n     * It is your responsibility to implement the server-side proxy. The proxy returns the decoded file with\n     * the `\"Content-Disposition\"` header set to `attachment; filename=\"<fileName.pdf>\"`.\n     *\n     * In the request body, the proxy receives a POST request with the following parameters:\n     * - `\"contentType\"`&mdash;The MIME type of the file.\n     * - `\"base64\"`&mdash;The base-64 encoded file content.\n     * - `\"fileName\"`&mdash;The file name, as requested by the caller.\n     *\n     */\n    proxyURL: string;\n    /**\n     * A name or keyword which indicates where to display the document that is returned from the proxy.\n     * To display the document in a new window or iframe,\n     * the proxy has to have the `\"Content-Disposition\"` header set to `inline; filename=\"<fileName.pdf>\"`.\n     * @default \"_self\"\n     */\n    proxyTarget: string;\n    /**\n     * The producer (metadata) of the PDF document.\n     */\n    producer: string;\n    /**\n     * The subject (metadata) of the PDF document.\n     */\n    subject: string;\n    /**\n     * The title (metadata) of the PDF document.\n     */\n    title: string;\n    /**\n     * @hidden\n     */\n    pageTemplateDirective: PDFTemplateDirective;\n    /**\n     * @hidden\n     */\n    marginComponent: PDFMarginComponent;\n    protected readonly drawMargin: any;\n    protected pageTemplate: any;\n    constructor(element: ElementRef);\n    /**\n     * Saves the content as a PDF file with the specified name.\n     * @param fileName - The name of the exported file.\n     */\n    saveAs(fileName?: string): void;\n    /**\n     * Exports the content as a `Group` for further processing.\n     *\n     * @return - The root group of the exported scene.\n     */\n    export(): Promise<Group>;\n    protected save(element: HTMLElement, fileName: string): void;\n    protected exportElement(element: HTMLElement): Promise<Group>;\n    protected cleanup(): void;\n    protected drawOptions(): DrawOptions;\n    protected pdfOptions(): any;\n    protected saveOptions(): SaveOptions;\n    protected drawElement(element: HTMLElement, options: DrawOptions): Promise<Group>;\n    protected exportGroup(group: Group, options: pdf.PDFOptions): Promise<string>;\n    private saveDataUri;\n}\n"]}